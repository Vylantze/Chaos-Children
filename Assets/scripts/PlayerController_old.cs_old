/*
 * 
 * 
 * Uses Unity engine's forces 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
///

using UnityEngine;
using System.Collections;

public class PlayerController_old : MonoBehaviour {

	public bool jump = false;
	public bool facingRight = true;
	public float moveForce = 365f;
	public float maxHoriSpeed = 10f;
	public float maxVerticalSpeed = 20f;
	public float jumpForce = 1000f;

	//public Transform groundCheck;

	private bool grounded = false;
	private Rigidbody2D rb2d;
	public Sprite sprite;
	
	[HideInInspector] private Collider2D[] collider; //array
	// Use this for initialization
	void Awake () {
		rb2d = GetComponent<Rigidbody2D> ();
		collider = GetComponents<Collider2D> ();
	}
	
	// Update is called once per frame
	void Update () {
		//grounded = Physics2D.Linecast(transform.position, groundCheck.position, 1 << LayerMask.NameToLayer("Ground"));
		grounded = false;
		foreach (Collider2D holder in collider) {
			if (holder.IsTouchingLayers(LayerMask.GetMask("Ground"))) {
				grounded = true;
				break;
			}
		}

		/*
		if (rb2d.velocity.y == 0) {
			grounded = true;
		} else {
			grounded = false;
		}/
		if (Input.GetButtonDown("Jump") && grounded)
		{
			jump = true;
		}
	}
	
	void FixedUpdate()
	{
		float h = Input.GetAxis("Horizontal");
		float x_speed = rb2d.velocity.x;
		float y_speed = rb2d.velocity.y;

		if (h * rb2d.velocity.x < maxHoriSpeed) {
			rb2d.AddForce (Vector2.right * h * moveForce);
		}
		if (Mathf.Abs (x_speed) > maxHoriSpeed) {
			x_speed = Mathf.Sign (x_speed) * maxHoriSpeed;
		}
		if (Mathf.Abs (y_speed) > maxVerticalSpeed) {
			y_speed =  Mathf.Sign (y_speed) * maxVerticalSpeed;
		}

		if (h > 0 && !facingRight)
			Flip ();
		else if (h < 0 && facingRight)
			Flip ();

		rb2d.velocity = new Vector2 (x_speed, y_speed);
		if (jump)
		{
			rb2d.AddForce(new Vector2(0f, jumpForce));
			jump = false;
		}
		
	}
	
	void Flip() {
		facingRight = !facingRight;
		Vector3 theScale = transform.localScale;
		theScale.x *= -1;
		transform.localScale = theScale;
	}
}
//*/